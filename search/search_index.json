{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#flet-audio-recorder","title":"flet-audio-recorder","text":"<p>Adds audio recording support to Flet apps.</p> <p>It is based on the record Flutter package.</p>"},{"location":"#platform-support","title":"Platform Support","text":"<p>This package supports the following platforms:</p> Platform Supported Windows \u2705 macOS \u2705 Linux \u2705 iOS \u2705 Android \u2705 Web \u2705"},{"location":"#usage","title":"Usage","text":""},{"location":"#installation","title":"Installation","text":"<p>To install the <code>flet-audio-recorder</code> package and add it to your project dependencies:</p> uvpippoetry <pre><code>uv add flet-audio-recorder\n</code></pre> <pre><code>pip install flet-audio-recorder  # (1)!\n</code></pre> <ol> <li>After this, you will have to manually add this package to your <code>requirements.txt</code> or <code>pyproject.toml</code>.</li> </ol> <pre><code>poetry add flet-audio-recorder\n</code></pre> Note <p>On Linux, encoding is provided by fmedia which must be installed separately.</p>"},{"location":"#examples","title":"Examples","text":"<p>See these.</p>"},{"location":"audio_recorder/","title":"AudioRecorder","text":""},{"location":"audio_recorder/#examples","title":"Examples","text":""},{"location":"audio_recorder/#example-1","title":"Example 1","text":"example_1.py<pre><code>import flet as ft\n\nimport flet_audio_recorder as far\n\n\ndef main(page: ft.Page):\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n    page.appbar = ft.AppBar(title=ft.Text(\"Audio Recorder\"), center_title=True)\n\n    path = \"test-audio-file.wav\"\n\n    def show_snackbar(message):\n        page.show_dialog(ft.SnackBar(ft.Text(message)))\n\n    async def handle_recording_start(e: ft.Event[ft.Button]):\n        show_snackbar(\"Starting recording...\")\n        await recorder.start_recording(output_path=path)\n\n    async def handle_recording_stop(e: ft.Event[ft.Button]):\n        output_path = await recorder.stop_recording()\n        show_snackbar(f\"Stopped recording. Output Path: {output_path}\")\n        if page.web and output_path is not None:\n            await page.launch_url(output_path)\n\n    async def handle_list_devices(e: ft.Event[ft.Button]):\n        o = await recorder.get_input_devices()\n        show_snackbar(f\"Input Devices: {', '.join([d.label for d in o])}\")\n\n    async def handle_has_permission(e: ft.Event[ft.Button]):\n        try:\n            status = await recorder.has_permission()\n            show_snackbar(f\"Audio Recording Permission status: {status}\")\n        except Exception as e:\n            show_snackbar(f\"Error checking permission: {e}\")\n\n    async def handle_pause(e: ft.Event[ft.Button]):\n        print(f\"isRecording: {await recorder.is_recording()}\")\n        if await recorder.is_recording():\n            await recorder.pause_recording()\n\n    async def handle_resume(e: ft.Event[ft.Button]):\n        print(f\"isPaused: {await recorder.is_paused()}\")\n        if await recorder.is_paused():\n            await recorder.resume_recording()\n\n    async def handle_audio_encoder_test(e: ft.Event[ft.Button]):\n        print(await recorder.is_supported_encoder(far.AudioEncoder.WAV))\n\n    recorder = far.AudioRecorder(\n        configuration=far.AudioRecorderConfiguration(encoder=far.AudioEncoder.WAV),\n        on_state_change=lambda e: print(f\"State Changed: {e.data}\"),\n    )\n    page.services.append(recorder)\n\n    page.add(\n        ft.Button(content=\"Start Audio Recorder\", on_click=handle_recording_start),\n        ft.Button(content=\"Stop Audio Recorder\", on_click=handle_recording_stop),\n        ft.Button(content=\"List Devices\", on_click=handle_list_devices),\n        ft.Button(content=\"Pause Recording\", on_click=handle_pause),\n        ft.Button(content=\"Resume Recording\", on_click=handle_resume),\n        ft.Button(content=\"WAV Encoder Support\", on_click=handle_audio_encoder_test),\n        ft.Button(\n            content=\"Get Audio Recording Permission Status\",\n            on_click=handle_has_permission,\n        ),\n    )\n\n\nft.run(main)\n</code></pre>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder","title":"AudioRecorder","text":"<p>               Bases: <code>Service</code></p> <p>A control that allows you to record audio from your device.</p> <p>This control can record audio using different audio encoders and also allows configuration of various audio recording parameters such as noise suppression, echo cancellation, and more.</p> Note <p>This control is non-visual and should be added to     [<code>Page.services</code>][flet.Page.services] list before it can be used.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.configuration","title":"configuration","text":"<pre><code>configuration: AudioRecorderConfiguration = field(\n    default_factory=lambda: AudioRecorderConfiguration()\n)\n</code></pre> <p>The default configuration of the audio recorder.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.on_state_change","title":"on_state_change","text":"<pre><code>on_state_change: (\n    EventHandler[AudioRecorderStateChangeEvent] | None\n) = None\n</code></pre> <p>Event handler that is called when the state of the audio recorder changes.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre> <p>This method is called every time when this control is being updated.</p> <p>/// details | Note Make sure not to call/request an <code>update()</code> here. ///</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.cancel_recording","title":"cancel_recording","text":"<pre><code>cancel_recording(timeout: float | None = 10)\n</code></pre> <p>Cancels the current audio recording.</p> PARAMETER DESCRIPTION <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.get_input_devices","title":"get_input_devices","text":"<pre><code>get_input_devices(\n    timeout: float | None = 10,\n) -&gt; list[InputDevice]\n</code></pre> <p>Retrieves the available input devices for recording.</p> PARAMETER DESCRIPTION <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RETURNS DESCRIPTION <code>list[InputDevice]</code> <p>A list of available input devices.</p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.has_permission","title":"has_permission","text":"<pre><code>has_permission(timeout: float | None = 10) -&gt; bool\n</code></pre> <p>Checks if the app has permission to record audio.</p> PARAMETER DESCRIPTION <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the app has permission, <code>False</code> otherwise.</p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.is_paused","title":"is_paused","text":"<pre><code>is_paused(timeout: float | None = 10) -&gt; bool\n</code></pre> <p>Checks whether the audio recorder is currently paused.</p> PARAMETER DESCRIPTION <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the recorder is paused, <code>False</code> otherwise.</p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.is_recording","title":"is_recording","text":"<pre><code>is_recording(timeout: float | None = 10) -&gt; bool\n</code></pre> <p>Checks whether the audio recorder is currently recording.</p> PARAMETER DESCRIPTION <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the recorder is currently recording, <code>False</code> otherwise.</p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.is_supported_encoder","title":"is_supported_encoder","text":"<pre><code>is_supported_encoder(\n    encoder: AudioEncoder, timeout: float | None = 10\n) -&gt; bool\n</code></pre> <p>Checks if the given audio encoder is supported by the recorder.</p> PARAMETER DESCRIPTION <code>encoder</code> <p>The audio encoder to check.</p> <p> TYPE: <code>AudioEncoder</code> </p> <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the encoder is supported, <code>False</code> otherwise.</p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.pause_recording","title":"pause_recording","text":"<pre><code>pause_recording(timeout: float | None = 10)\n</code></pre> <p>Pauses the ongoing audio recording.</p> PARAMETER DESCRIPTION <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.resume_recording","title":"resume_recording","text":"<pre><code>resume_recording(timeout: float | None = 10)\n</code></pre> <p>Resumes a paused audio recording.</p> PARAMETER DESCRIPTION <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.start_recording","title":"start_recording","text":"<pre><code>start_recording(\n    output_path: str | None = None,\n    configuration: AudioRecorderConfiguration | None = None,\n    timeout: float | None = 10,\n) -&gt; bool\n</code></pre> <p>Starts recording audio and saves it to the specified output path.</p> <p>If not on the web, the <code>output_path</code> parameter must be provided.</p> PARAMETER DESCRIPTION <code>output_path</code> <p>The file path where the audio will be saved. It must be specified if not on web.</p> <p> TYPE: <code>str | None</code> DEFAULT: <code>None</code> </p> <code>configuration</code> <p>The configuration for the audio recorder. If <code>None</code>, the <code>AudioRecorder.configuration</code> will be used.</p> <p> TYPE: <code>AudioRecorderConfiguration | None</code> DEFAULT: <code>None</code> </p> <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if recording was successfully started, <code>False</code> otherwise.</p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.stop_recording","title":"stop_recording","text":"<pre><code>stop_recording(timeout: float | None = 10) -&gt; str | None\n</code></pre> <p>Stops the audio recording and optionally returns the path to the saved file.</p> PARAMETER DESCRIPTION <code>timeout</code> <p>The maximum amount of time (in seconds) to wait for a response.</p> <p> TYPE: <code>float | None</code> DEFAULT: <code>10</code> </p> RETURNS DESCRIPTION <code>str | None</code> <p>The file path where the audio was saved or <code>None</code> if not applicable.</p> RAISES DESCRIPTION <code>TimeoutError</code> <p>If the request times out.</p>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"audio_recorder/#flet_audio_recorder.audio_recorder.AudioRecorder.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#020-2025-06-26","title":"0.2.0 - 2025-06-26","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Deployed online documentation: https://flet-dev.github.io/flet-audiorecorder/</li> <li><code>AudioRecorder</code> control new property: <code>configuration</code></li> <li>New dataclasses:<ul> <li><code>AudioRecorderConfiguration</code></li> <li><code>AndroidRecorderConfiguration</code></li> <li><code>IosRecorderConfiguration</code></li> <li><code>InputDevice</code></li> </ul> </li> <li>New enums:<ul> <li><code>AndroidAudioSource</code></li> <li><code>IosAudioCategoryOption</code></li> </ul> </li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Refactored <code>AudioRecorder</code> control to use <code>@ft.control</code> dataclass-style definition and switched to <code>Service</code> control type</li> </ul>"},{"location":"changelog/#breaking-changes","title":"Breaking Changes","text":"<ul> <li><code>AudioRecorder</code> must now be added to <code>Page.services</code> instead of <code>Page.overlay</code>.</li> <li>Recording configuration properties (<code>audio_encoder</code>, <code>suppress_noise</code>, <code>cancel_echo</code>, <code>auto_gain</code>, <code>channels_num</code>, <code>sample_rate</code>, <code>bit_rate</code>) are now grouped under <code>configuration: AudioRecorderConfiguration</code></li> <li>Event <code>on_state_changed</code> renamed to <code>on_state_change</code></li> <li>In all methods, parameter <code>wait_timeout</code> was renamed to <code>timeout</code>.</li> <li>The following <code>AudioRecorder</code> sync methods were made <code>async</code>:<ul> <li><code>is_recording</code></li> <li><code>stop_recording</code></li> <li><code>cancel_recording</code></li> <li><code>resume_recording</code></li> <li><code>pause_recording</code></li> <li><code>is_paused</code></li> <li><code>is_supported_encoder</code></li> <li><code>get_input_devices</code></li> <li><code>has_permission</code></li> </ul> </li> </ul>"},{"location":"changelog/#010-2025-01-15","title":"0.1.0 - 2025-01-15","text":"<p>Initial release.</p>"},{"location":"license/","title":"License","text":"<pre><code>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>"},{"location":"types/android_audio_source/","title":"Android audio source","text":""},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource","title":"AndroidAudioSource","text":"<p>               Bases: <code>Enum</code></p> <p>Android-specific audio source types.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.CAMCORDER","title":"CAMCORDER","text":"<pre><code>CAMCORDER = 'camcorder'\n</code></pre> <p>Microphone audio source tuned for video recording, with the same orientation as the camera, if available.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.DEFAULT_SOURCE","title":"DEFAULT_SOURCE","text":"<pre><code>DEFAULT_SOURCE = 'defaultSource'\n</code></pre> <p>Default audio source.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.MIC","title":"MIC","text":"<pre><code>MIC = 'mic'\n</code></pre> <p>Microphone audio source.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.REMOTE_SUBMIX","title":"REMOTE_SUBMIX","text":"<pre><code>REMOTE_SUBMIX = 'remoteSubMix'\n</code></pre> <p>Audio source for a submix of audio streams to be presented remotely.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.UNPROCESSED","title":"UNPROCESSED","text":"<pre><code>UNPROCESSED = 'unprocessed'\n</code></pre> <p>Microphone audio source tuned for unprocessed (raw) sound if available, behaves like <code>DEFAULT_SOURCE</code> otherwise.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.VOICE_CALL","title":"VOICE_CALL","text":"<pre><code>VOICE_CALL = 'voiceCall'\n</code></pre> <p>Voice call uplink + downlink audio source.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.VOICE_COMMUNICATION","title":"VOICE_COMMUNICATION","text":"<pre><code>VOICE_COMMUNICATION = 'voiceCommunication'\n</code></pre> <p>Microphone audio source tuned for voice communications such as VoIP.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.VOICE_DOWNLINK","title":"VOICE_DOWNLINK","text":"<pre><code>VOICE_DOWNLINK = 'voiceDownlink'\n</code></pre> <p>Voice call downlink (Rx) audio source.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.VOICE_PERFORMANCE","title":"VOICE_PERFORMANCE","text":"<pre><code>VOICE_PERFORMANCE = 'voicePerformance'\n</code></pre> <p>Source for capturing audio meant to be processed in real time and played back for live performance (e.g karaoke).</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.VOICE_RECOGNITION","title":"VOICE_RECOGNITION","text":"<pre><code>VOICE_RECOGNITION = 'voiceRecognition'\n</code></pre> <p>Microphone audio source tuned for voice recognition.</p>"},{"location":"types/android_audio_source/#flet_audio_recorder.types.AndroidAudioSource.VOICE_UPLINK","title":"VOICE_UPLINK","text":"<pre><code>VOICE_UPLINK = 'voiceUplink'\n</code></pre> <p>Voice call uplink (Tx) audio source.</p>"},{"location":"types/android_recorder_configuration/","title":"Android recorder configuration","text":""},{"location":"types/android_recorder_configuration/#flet_audio_recorder.types.AndroidRecorderConfiguration","title":"AndroidRecorderConfiguration","text":"<p>Android specific configuration for recording.</p>"},{"location":"types/android_recorder_configuration/#flet_audio_recorder.types.AndroidRecorderConfiguration.audio_source","title":"audio_source","text":"<pre><code>audio_source: AndroidAudioSource = DEFAULT_SOURCE\n</code></pre> <p>Defines the audio source.</p> <p>An audio source defines both a default physical source of audio signal, and a recording configuration. Some effects are available or not depending on this source.</p> <p>Most of the time, you should use <code>AndroidAudioSource.DEFAULT_SOURCE</code> or <code>AndroidAudioSource.MIC</code>.</p>"},{"location":"types/android_recorder_configuration/#flet_audio_recorder.types.AndroidRecorderConfiguration.manage_bluetooth","title":"manage_bluetooth","text":"<pre><code>manage_bluetooth: bool = True\n</code></pre> <p>Try to start a bluetooth audio connection to a headset (Bluetooth SCO).</p>"},{"location":"types/android_recorder_configuration/#flet_audio_recorder.types.AndroidRecorderConfiguration.mute_audio","title":"mute_audio","text":"<pre><code>mute_audio: bool = False\n</code></pre> <p>Whether to mute all audio streams like alarms, music, ring, etc.</p> <p>This is useful when you want to record audio without any background noise. The streams are restored to their previous state after recording is stopped and will stay at current state on pause/resume.</p>"},{"location":"types/android_recorder_configuration/#flet_audio_recorder.types.AndroidRecorderConfiguration.use_legacy","title":"use_legacy","text":"<pre><code>use_legacy: bool = False\n</code></pre> <p>Whether to use the Android MediaRecorder.</p> <p>While advanced recorder (the default) unlocks additionnal features, the legacy recorder is stability oriented.</p>"},{"location":"types/audio_recorder_configuration/","title":"Audio recorder configuration","text":""},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration","title":"AudioRecorderConfiguration","text":"<p>Recording configuration.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.android_configuration","title":"android_configuration","text":"<pre><code>android_configuration: AndroidRecorderConfiguration = field(\n    default_factory=lambda: AndroidRecorderConfiguration()\n)\n</code></pre> <p>Android specific configuration.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.auto_gain","title":"auto_gain","text":"<pre><code>auto_gain: bool = False\n</code></pre> <p>The recorder will try to auto adjust recording volume in a limited range (if available on the device).</p> <p>Recording volume may be lowered by using this.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.bit_rate","title":"bit_rate","text":"<pre><code>bit_rate: Number = 128000\n</code></pre> <p>The audio encoding bit rate in bits per second if applicable.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.cancel_echo","title":"cancel_echo","text":"<pre><code>cancel_echo: bool = False\n</code></pre> <p>The recorder will try to reduce echo (if available on the device).</p> <p>Recording volume may be lowered by using this.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.channels","title":"channels","text":"<pre><code>channels: int = 2\n</code></pre> <p>The numbers of channels for the recording.</p> <ul> <li><code>1</code> for mono</li> <li><code>2</code> for stereo</li> </ul> <p>Most platforms only accept at most 2 channels.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.device","title":"device","text":"<pre><code>device: InputDevice | None = None\n</code></pre> <p>The device to be used for recording.</p> <p>If <code>None</code>, default device will be selected.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.encoder","title":"encoder","text":"<pre><code>encoder: AudioEncoder = WAV\n</code></pre> <p>The requested output format through this given encoder.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.ios_configuration","title":"ios_configuration","text":"<pre><code>ios_configuration: IosRecorderConfiguration = field(\n    default_factory=lambda: IosRecorderConfiguration()\n)\n</code></pre> <p>iOS specific configuration.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.sample_rate","title":"sample_rate","text":"<pre><code>sample_rate: int = 44100\n</code></pre> <p>The sample rate for audio in samples per second if applicable.</p>"},{"location":"types/audio_recorder_configuration/#flet_audio_recorder.types.AudioRecorderConfiguration.suppress_noise","title":"suppress_noise","text":"<pre><code>suppress_noise: bool = False\n</code></pre> <p>The recorder will try to negate the input noise (if available on the device).</p> <p>Recording volume may be lowered by using this.</p>"},{"location":"types/audio_recorder_state/","title":"Audio recorder state","text":""},{"location":"types/audio_recorder_state/#flet_audio_recorder.types.AudioRecorderState","title":"AudioRecorderState","text":"<p>               Bases: <code>Enum</code></p> <p>State of the audio recorder.</p>"},{"location":"types/audio_recorder_state/#flet_audio_recorder.types.AudioRecorderState.PAUSED","title":"PAUSED","text":"<pre><code>PAUSED = 'paused'\n</code></pre> <p>The audio recorder is paused and can be resumed.</p>"},{"location":"types/audio_recorder_state/#flet_audio_recorder.types.AudioRecorderState.RECORDING","title":"RECORDING","text":"<pre><code>RECORDING = 'recording'\n</code></pre> <p>The audio recorder is currently recording audio.</p>"},{"location":"types/audio_recorder_state/#flet_audio_recorder.types.AudioRecorderState.STOPPED","title":"STOPPED","text":"<pre><code>STOPPED = 'stopped'\n</code></pre> <p>The audio recorder is stopped and not recording.</p>"},{"location":"types/audioencoder/","title":"Audioencoder","text":""},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder","title":"AudioEncoder","text":"<p>               Bases: <code>Enum</code></p> <p>Represents the different audio encoders for audio recording.</p>"},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder.AACELD","title":"AACELD","text":"<pre><code>AACELD = 'aacEld'\n</code></pre> <p>Advanced Audio Codec Enhanced Low Delay. Suitable for low-latency applications like VoIP.</p>"},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder.AACHE","title":"AACHE","text":"<pre><code>AACHE = 'aacHe'\n</code></pre> <p>Advanced Audio Codec High Efficiency. Optimized for high-quality audio at lower bit rates.</p>"},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder.AACLC","title":"AACLC","text":"<pre><code>AACLC = 'aacLc'\n</code></pre> <p>Advanced Audio Codec Low Complexity. A commonly used encoder for streaming and general audio recording.</p>"},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder.AMRNB","title":"AMRNB","text":"<pre><code>AMRNB = 'amrNb'\n</code></pre> <p>Adaptive Multi-Rate Narrow Band. Used for speech audio in mobile communication.</p>"},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder.AMRWB","title":"AMRWB","text":"<pre><code>AMRWB = 'amrWb'\n</code></pre> <p>Adaptive Multi-Rate Wide Band. Used for higher-quality speech audio.</p>"},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder.FLAC","title":"FLAC","text":"<pre><code>FLAC = 'flac'\n</code></pre> <p>Free Lossless Audio Codec. Provides high-quality lossless audio compression.</p>"},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder.OPUS","title":"OPUS","text":"<pre><code>OPUS = 'opus'\n</code></pre> <p>A codec designed for both speech and audio applications, known for its versatility.</p>"},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder.PCM16BITS","title":"PCM16BITS","text":"<pre><code>PCM16BITS = 'pcm16bits'\n</code></pre> <p>Pulse Code Modulation with 16-bit depth, used for high-fidelity audio.</p>"},{"location":"types/audioencoder/#flet_audio_recorder.types.AudioEncoder.WAV","title":"WAV","text":"<pre><code>WAV = 'wav'\n</code></pre> <p>Standard audio format used for raw, uncompressed audio data.</p>"},{"location":"types/audiorecorderstate/","title":"Audiorecorderstate","text":""},{"location":"types/audiorecorderstate/#flet_audio_recorder.types.AudioRecorderState","title":"AudioRecorderState","text":"<p>               Bases: <code>Enum</code></p> <p>State of the audio recorder.</p>"},{"location":"types/audiorecorderstate/#flet_audio_recorder.types.AudioRecorderState.PAUSED","title":"PAUSED","text":"<pre><code>PAUSED = 'paused'\n</code></pre> <p>The audio recorder is paused and can be resumed.</p>"},{"location":"types/audiorecorderstate/#flet_audio_recorder.types.AudioRecorderState.RECORDING","title":"RECORDING","text":"<pre><code>RECORDING = 'recording'\n</code></pre> <p>The audio recorder is currently recording audio.</p>"},{"location":"types/audiorecorderstate/#flet_audio_recorder.types.AudioRecorderState.STOPPED","title":"STOPPED","text":"<pre><code>STOPPED = 'stopped'\n</code></pre> <p>The audio recorder is stopped and not recording.</p>"},{"location":"types/audiorecorderstatechangeevent/","title":"Audiorecorderstatechangeevent","text":""},{"location":"types/audiorecorderstatechangeevent/#flet_audio_recorder.types.AudioRecorderStateChangeEvent","title":"AudioRecorderStateChangeEvent","text":"<p>               Bases: <code>Event['AudioRecorder']</code></p>"},{"location":"types/audiorecorderstatechangeevent/#flet_audio_recorder.types.AudioRecorderStateChangeEvent.control","title":"control","text":"<pre><code>control: EventControlType = field(repr=False)\n</code></pre>"},{"location":"types/audiorecorderstatechangeevent/#flet_audio_recorder.types.AudioRecorderStateChangeEvent.data","title":"data","text":"<pre><code>data: Any | None = field(default=None, kw_only=True)\n</code></pre>"},{"location":"types/audiorecorderstatechangeevent/#flet_audio_recorder.types.AudioRecorderStateChangeEvent.name","title":"name","text":"<pre><code>name: str\n</code></pre>"},{"location":"types/audiorecorderstatechangeevent/#flet_audio_recorder.types.AudioRecorderStateChangeEvent.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre>"},{"location":"types/audiorecorderstatechangeevent/#flet_audio_recorder.types.AudioRecorderStateChangeEvent.state","title":"state","text":"<pre><code>state: AudioRecorderState\n</code></pre> <p>The new state of the audio recorder.</p>"},{"location":"types/audiorecorderstatechangeevent/#flet_audio_recorder.types.AudioRecorderStateChangeEvent.target","title":"target","text":"<pre><code>target: int\n</code></pre>"},{"location":"types/input_device/","title":"Input device","text":""},{"location":"types/input_device/#flet_audio_recorder.types.InputDevice","title":"InputDevice","text":"<p>An audio input device.</p>"},{"location":"types/input_device/#flet_audio_recorder.types.InputDevice.id","title":"id","text":"<pre><code>id: str\n</code></pre> <p>The ID used to select the device on the platform.</p>"},{"location":"types/input_device/#flet_audio_recorder.types.InputDevice.label","title":"label","text":"<pre><code>label: str\n</code></pre> <p>The label text representation.</p>"},{"location":"types/ios_audio_category_option/","title":"Ios audio category option","text":""},{"location":"types/ios_audio_category_option/#flet_audio_recorder.types.IosAudioCategoryOption","title":"IosAudioCategoryOption","text":"<p>               Bases: <code>Enum</code></p> <p>Audio behaviors.</p> <p>Each option is valid only for specific audio session categories.</p>"},{"location":"types/ios_audio_category_option/#flet_audio_recorder.types.IosAudioCategoryOption.ALLOW_AIRPLAY","title":"ALLOW_AIRPLAY","text":"<pre><code>ALLOW_AIRPLAY = 'allowAirPlay'\n</code></pre> <p>Stream audio from this session to AirPlay devices.</p> Note <p>Available from iOS 10.0.</p>"},{"location":"types/ios_audio_category_option/#flet_audio_recorder.types.IosAudioCategoryOption.ALLOW_BLUETOOTH","title":"ALLOW_BLUETOOTH","text":"<pre><code>ALLOW_BLUETOOTH = 'allowBluetooth'\n</code></pre> <p>Bluetooth hands-free devices appear as available input routes.</p>"},{"location":"types/ios_audio_category_option/#flet_audio_recorder.types.IosAudioCategoryOption.ALLOW_BLUETOOTH_A2DP","title":"ALLOW_BLUETOOTH_A2DP","text":"<pre><code>ALLOW_BLUETOOTH_A2DP = 'allowBluetoothA2DP'\n</code></pre> <p>Stream audio from this session to Bluetooth devices that support the Advanced Audio Distribution Profile (A2DP).</p> Note <p>Available from iOS 10.0.</p>"},{"location":"types/ios_audio_category_option/#flet_audio_recorder.types.IosAudioCategoryOption.DEFAULT_TO_SPEAKER","title":"DEFAULT_TO_SPEAKER","text":"<pre><code>DEFAULT_TO_SPEAKER = 'defaultToSpeaker'\n</code></pre> <p>Audio from the session defaults to the built-in speaker instead of the receiver.</p>"},{"location":"types/ios_audio_category_option/#flet_audio_recorder.types.IosAudioCategoryOption.DUCK_OTHERS","title":"DUCK_OTHERS","text":"<pre><code>DUCK_OTHERS = 'duckOthers'\n</code></pre> <p>Reduces the volume of other audio sessions while audio from this session plays.</p>"},{"location":"types/ios_audio_category_option/#flet_audio_recorder.types.IosAudioCategoryOption.INTERRUPT_SPOKEN_AUDIO_AND_MIX_WITH_OTHERS","title":"INTERRUPT_SPOKEN_AUDIO_AND_MIX_WITH_OTHERS","text":"<pre><code>INTERRUPT_SPOKEN_AUDIO_AND_MIX_WITH_OTHERS = (\n    \"interruptSpokenAudioAndMixWithOthers\"\n)\n</code></pre> <p>Pause spoken audio content from other sessions when your app plays its audio.</p> <p>Available from iOS 9.0.</p>"},{"location":"types/ios_audio_category_option/#flet_audio_recorder.types.IosAudioCategoryOption.MIX_WITH_OTHERS","title":"MIX_WITH_OTHERS","text":"<pre><code>MIX_WITH_OTHERS = 'mixWithOthers'\n</code></pre> <p>Whether audio from this session mixes with audio from active sessions in other audio apps.</p>"},{"location":"types/ios_audio_category_option/#flet_audio_recorder.types.IosAudioCategoryOption.OVERRIDE_MUTED_MICROPHONE_INTERRUPTION","title":"OVERRIDE_MUTED_MICROPHONE_INTERRUPTION","text":"<pre><code>OVERRIDE_MUTED_MICROPHONE_INTERRUPTION = (\n    \"overrideMutedMicrophoneInterruption\"\n)\n</code></pre> <p>System interrupts the audio session when it mutes the built-in microphone.</p> Note <p>Available from iOS 14.5.</p>"},{"location":"types/ios_recorder_configuration/","title":"Ios recorder configuration","text":""},{"location":"types/ios_recorder_configuration/#flet_audio_recorder.types.IosRecorderConfiguration","title":"IosRecorderConfiguration","text":"<p>iOS specific configuration for recording.</p>"},{"location":"types/ios_recorder_configuration/#flet_audio_recorder.types.IosRecorderConfiguration.manage_audio_session","title":"manage_audio_session","text":"<pre><code>manage_audio_session: bool = True\n</code></pre> <p>Whether to manage the shared AVAudioSession.</p> <p>Set this to <code>False</code> if another plugin is already managing the AVAudioSession.</p>"},{"location":"types/ios_recorder_configuration/#flet_audio_recorder.types.IosRecorderConfiguration.options","title":"options","text":"<pre><code>options: list[IosAudioCategoryOption] = field(\n    default_factory=lambda: [\n        DEFAULT_TO_SPEAKER,\n        ALLOW_BLUETOOTH,\n        ALLOW_BLUETOOTH_A2DP,\n    ]\n)\n</code></pre> <p>Optional audio behaviors.</p>"}]}